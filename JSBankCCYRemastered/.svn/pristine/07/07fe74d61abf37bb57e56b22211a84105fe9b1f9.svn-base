//
//  PickImage.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/6/6.
//  Copyright © 2019 Jack. All rights reserved.
//

#import "PickImage.h"

@interface PickImage ()<UINavigationControllerDelegate,UIImagePickerControllerDelegate, UIAlertViewDelegate>
@property (nonatomic, copy) NSString *callback;

@end

@implementation PickImage

- (void)handler:(id)data andContext:(PCDContext *)context ResponseCallback:(WVJBResponseCallback )responseCallback {
    JSBaseWebViewController *viewController = (JSBaseWebViewController *)context.viewController;
    NSDictionary *dict = (NSDictionary *)data;
    if (!dict.notNull) {return;}
    self.callback = [dict objectForKey:@"callback"];

    if (@available(iOS 8.0, *)) {
        UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"选取一张图片" message:@"" preferredStyle:UIAlertControllerStyleActionSheet];

        UIAlertAction *photoAction = [UIAlertAction actionWithTitle:@"从相册选择" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            [self pickImageWithType:UIImagePickerControllerSourceTypePhotoLibrary target:viewController];
        }];
        UIAlertAction *cameraAction = [UIAlertAction actionWithTitle:@"相机拍照选择" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            #if TARGET_IPHONE_SIMULATOR
            [JSDeftAlert showMessage:@"模拟器不支持拍照" afterDelay:2.5 completeHandle:nil];
            #else
            [self pickImageWithType:UIImagePickerControllerSourceTypeCamera target:viewController];
            #endif
        }];
        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleDestructive handler:^(UIAlertAction * _Nonnull action) {
            
        }];
        [alertController addAction:photoAction];
        [alertController addAction:cameraAction];
        [alertController addAction:cancelAction];
        [viewController presentViewController:alertController animated:YES completion:nil];
    }
}

- (void)pickImageWithType:(UIImagePickerControllerSourceType)type target:(UIViewController *)target {
    UIImagePickerController *imgPicker = [[UIImagePickerController alloc] init];
    imgPicker.sourceType = type;
    imgPicker.delegate = self;
    [target presentViewController:imgPicker animated:YES completion:nil];
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info {
    UIImage *image = info[UIImagePickerControllerOriginalImage];
    NSData *imageData=UIImageJPEGRepresentation(image, 0.06f);
    NSString *base64String = imageData.base64EncodedString;
    if (base64String.notNull) {
        evaluateJavaScriptOnMainThread_quotes(self, self.callback, base64String);
    }
    [picker dismissViewControllerAnimated:YES completion:nil];
}
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissViewControllerAnimated:YES completion:nil];
}

@end
