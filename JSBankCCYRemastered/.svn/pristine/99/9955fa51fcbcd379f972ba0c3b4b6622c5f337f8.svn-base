//
//  ThirdPartViewController.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/6/27.
//  Copyright © 2019 Jack. All rights reserved.
//

#import "ThirdPartViewController.h"

@interface ThirdPartViewController ()

@end

@implementation ThirdPartViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    UIView *contentView = [[UIView alloc] init];
    contentView.frame = CGRectMake(0, 0, 100, self.navigationBarHeight - 20);
    
    UIButton *backItem = [UIButton buttonWithType:UIButtonTypeSystem];
    backItem.hitTestEdgeInsets = UIEdgeInsetsMake(0, -20, 0, -10);
    backItem.frame = CGRectMake(0, 0, 30, self.navigationBarHeight - 20);
        backItem.imageView.contentMode = UIViewContentModeScaleAspectFit;
        UIImage *image = [[UIImage imageNamed:@"back.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
        [backItem setImage:image forState:UIControlStateNormal];
    [contentView addSubview:backItem];
    [backItem addTarget:self action:@selector(backAction) forControlEvents:UIControlEventTouchUpInside];
    
    UIButton *backItem1 = [UIButton buttonWithType:UIButtonTypeSystem];
    backItem1.hitTestEdgeInsets = UIEdgeInsetsMake(0, -10, 0, -20);
    backItem1.frame = CGRectMake(CGRectGetMaxX(backItem.frame) + 20, 0, 30, self.navigationBarHeight - 20);
    backItem1.imageView.contentMode = UIViewContentModeScaleAspectFit;
    UIImage *image1 = [[UIImage imageNamed:@"close.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
    [backItem1 setImage:image1 forState:UIControlStateNormal];
    [contentView addSubview:backItem1];
    [backItem1 addTarget:self action:@selector(closeAction) forControlEvents:UIControlEventTouchUpInside];
    
    PCDBarButtonItem *barButtonItem = [[PCDBarButtonItem alloc]initWithCustomView:contentView];
    self.navigationBar.leftBarButtonItem = barButtonItem;
}

- (void)backAction {
    if ([self.bankWebView canGoBack]) {
        [self.bankWebView goBack];
    } else {
        [self.tabBarController.navigationController popViewControllerAnimated:YES];
    }
}

- (void)closeAction {
    [self.tabBarController.navigationController popViewControllerAnimated:YES];
}

//以下与父类重复，原因是框架问题导致子类必须也要实现代理方法否则crash
- (void)fetchWebViewTitle {
    if (!self.title.notNull) {
        NSUInteger maxLenth = 12;
        if (!self.title.notNull) {
            NSString *title = [self.bankWebView stringByEvaluatingJavaScriptFromString:@"document.title"];
            if (title.length < maxLenth) {
                self.title = title;
            } else {
                self.title = [NSString stringWithFormat:@"%@...",[title substringToIndex:maxLenth]];
            }
        }
        [self.bankWebView stringByEvaluatingJavaScriptFromString:@"document.documentElement.style.webkitUserSelect='none';"];
    }
}

- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {
    self.webProgess.progress = 0.3;

    return YES;
}
- (void)webViewDidFinishLoad:(UIWebView *)webView {
    [self fetchWebViewTitle];
    [self.bankWebView.scrollView.mj_header endRefreshing];
    self.webProgess.progress = 1;
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.webProgess removeFromSuperview];
        self.webProgess = nil;
    });
}
- (void)webViewDidStartLoad:(UIWebView *)webVie {
//    self.webProgess.progress = 0.3;
}

- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error {
    NSLog(@"didFailLoadWithError");
    [self.bankWebView.scrollView.mj_header endRefreshing];
    self.webProgess.progress = 0.0;
}

- (void)dealloc {
    [self.webProgess removeFromSuperview];
    self.webProgess = nil;
}

@end
