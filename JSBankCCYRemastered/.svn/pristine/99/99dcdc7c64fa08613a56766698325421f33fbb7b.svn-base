//
//  ParamConfig.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/6/21.
//  Copyright Â© 2019 Jack. All rights reserved.
//

#import "ParamConfig.h"

@implementation ParamConfig

- (id)init {
    if (self = [super init]) {
        self.pwdLogin       = @{@"loginType"    : @"200",
                                @"isPassword" : @"1",
                                @"OPER_TYPE"  : @"pwd",
                                @"deviceType"    : [PCDevice deviceModel],
                                @"clientVersion": [PCDUtil appVersion],
                                @"root"         : [PCDevice isJailbreak] ? @"1" : @"0",
                                @"loginflag"  : @"2"}.mutableCopy;
        
        self.registerLogin  = @{@"loginType" : @"207",
                                @"OPER_TYPE" : @"finger",
                                @"loginflag" : @"3",
                                @"deviceType"    : [PCDevice deviceModel],
                                @"clientVersion": [PCDUtil appVersion],
                                @"root"         : [PCDevice isJailbreak] ? @"1" : @"0",
                                @"regflag"   : @"1"}.mutableCopy;
        
        self.codeLogin      = @{@"loginType" : @"201",
                                @"OPER_TYPE"  : @"msg",
                                @"deviceType"    : [PCDevice deviceModel],
                                @"clientVersion": [PCDUtil appVersion],
                                @"root"         : [PCDevice isJailbreak] ? @"1" : @"0",
                                @"loginflag"  : @"2"}.mutableCopy;
        
        self.biometryLogin  = @{@"loginType"     : @"206",
                                @"OPER_TYPE"     : @"finger",
                                @"loginflag"     : @"3",
                                @"deviceType"    : [PCDevice deviceModel],
                                @"clientVersion": [PCDUtil appVersion],
                                @"root"         : [PCDevice isJailbreak] ? @"1" : @"0"}.mutableCopy;
    }
    return self;
}

+ (instancetype)sharedParamConfig {
    static ParamConfig *paramConfig = nil;
    
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        paramConfig = [[self alloc] init];
    });
    
    return paramConfig;
}

@end

#ifdef __cplusplus
extern "C" {
#endif
    ParamConfig *Param() {
        
        return [ParamConfig sharedParamConfig];
    }
#ifdef __cplusplus
}
#endif
