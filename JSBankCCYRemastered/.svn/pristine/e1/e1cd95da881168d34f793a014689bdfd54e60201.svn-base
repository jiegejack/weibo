//
//  JSTextFieldView.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/4/16.
//  Copyright © 2019 Jack. All rights reserved.
//

#import "JSTextFieldView.h"

@interface JSTextFieldView ()
@property (nonatomic, strong) UIView *separatorLineBottom;
@property (nonatomic, strong) UIView *separatorLineTop;

@end
@implementation JSTextFieldView

- (id)initWithFrame:(CGRect)frame {
    if (self = [super initWithFrame:frame]) {
        self.titleLabel = [[UILabel alloc] init];
        self.titleLabel.textColor = [UIColor blackColor];
        self.titleLabel.textAlignment = NSTextAlignmentLeft;
        self.titleLabel.tintColor = [UIColor blackColor];
        self.titleLabel.font = [UIFont systemFontOfSize:15];
        [self addSubview:self.titleLabel];
        
        self.textField = [[ExtensionTextField alloc] init];
        [self configPassGuardTextField];
        self.textField.tintColor = [UIColor colorWithRed:0.30 green:0.60 blue:0.96 alpha:1.00];
        self.textField.font = [UIFont systemFontOfSize:15];
        self.textField.textAlignment = NSTextAlignmentLeft;
        [self addSubview:self.textField];
        
        self.separatorLineBottom = [[UIView alloc] init];
        self.separatorLineBottom.backgroundColor = [UIColor groupTableViewBackgroundColor];
        [self addSubview:self.separatorLineBottom];
        
        self.separatorLineTop = [[UIView alloc] init];
        self.separatorLineTop.hidden = YES;
        self.separatorLineTop.backgroundColor = [UIColor groupTableViewBackgroundColor];
        [self addSubview:self.separatorLineTop];
        
        self.markIcon = [[UIImageView alloc] init];
        self.markIcon.contentMode = UIViewContentModeScaleAspectFit;
        self.markIcon.hidden = YES;
        [self addSubview:self.markIcon];
        
        self.countDownView = [[JSCountDownView alloc] init];
        self.countDownView.hitTestEdgeInsets = UIEdgeInsetsMake(-20, -20, -20, -20);
        self.countDownView.hidden = YES;
        self.countDownView.time = 60;
        self.countDownView.tipString = @"重新获取";
        self.countDownView.backgroundColor = [UIColor colorWithRed:0.30 green:0.60 blue:0.96 alpha:1.00];
        [self.countDownView setTitle:@"获取验证码" forState:UIControlStateNormal];
        [self.countDownView setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        self.countDownView.titleLabel.font = [UIFont systemFontOfSize:15];
        self.countDownView.layer.cornerRadius = 4;
        [self.countDownView addTarget:self action:@selector(sendCode) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:self.countDownView];

        self.clearIcon = [[UIImageView alloc] init];
        self.clearIcon.hidden = YES;
        self.clearIcon.contentMode = UIViewContentModeScaleAspectFit;
        self.clearIcon.image = [UIImage imageNamed:@"clear.png"];
        self.clearIcon.backgroundColor = [UIColor redColor];
        [self addSubview:self.clearIcon];
        
        [self layoutSubControls];
    }
    return self;
}

- (void)setTitleFont:(UIFont *)titleFont {
    _titleFont = titleFont;
    
    self.titleLabel.font = titleFont;
}

- (void)setTitleColor:(UIColor *)titleColor {
    _titleColor = titleColor;
    
    self.titleLabel.textColor = titleColor;
}

- (void)setPlaceholdFont:(UIFont *)placeholdFont {
    _placeholdFont = placeholdFont;
    
    self.textField.font = placeholdFont;
    self.textField.font = placeholdFont;
}

- (void)setPlaceholdColor:(UIColor *)placeholdColor {
    _placeholdColor = placeholdColor;
    
     [self.textField setValue:placeholdColor forKeyPath:@"_placeholderLabel.textColor"];
    [self.textField setValue:placeholdColor forKeyPath:@"_placeholderLabel.textColor"];
}

- (void)setShowTopSeparator:(BOOL)showTopSeparator {
    _showTopSeparator = showTopSeparator;
    
    self.separatorLineTop.hidden = !showTopSeparator;
}

- (void)setMaxLength:(int)maxLength {
    _maxLength = maxLength;
    
    [self.textField setM_iMaxLen:maxLength];
}

- (void)setIsValidCode:(BOOL)isValidCode {
    _isValidCode = isValidCode;
    
    self.markIcon.hidden = NO;
    self.markIcon.image = [UIImage imageNamed:isValidCode ? @"ok" : @"fail"];
}

- (void)configPassGuardTextField {
    [PassGuardTextField initPassGuardCtrl];
    [self.textField setM_license:License];
    [self.textField setM_mode:YES];//密码是否明文
    [self.textField setM_hasstatus:NO];//按键状态
    [self.textField setM_isEnablePaste:NO];//禁止粘贴
    [self.textField setM_iMaxLen:16];
    [self.textField setM_ikeypresstype:KEY_NONE_KEY_PRESS];
    [self.textField setM_uiapp:[UIApplication sharedApplication]];
    [self.textField setM_ikeyordertype:KEY_CHAOS_SWITCH_VIEW];
    [self.textField setM_strInput1:KAESKey];
    self.textField.clearButtonMode = UITextFieldViewModeWhileEditing;
    self.textField.translatesAutoresizingMaskIntoConstraints = NO;
}

- (void)sendCode {
    if (self.sendCodeAction) {
        self.sendCodeAction();
    }
}

- (void)layoutSubControls {
    [self.titleLabel mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(self.mas_centerY);
        make.left.mas_equalTo(self.mas_left).offset(20);
        make.height.mas_equalTo(20);
    }];
    [self.textField mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.mas_top);
        make.bottom.mas_equalTo(self.mas_bottom);
        make.left.mas_equalTo(self.titleLabel.mas_right).offset(16);
    }];
    [self.separatorLineBottom mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.bottom.mas_equalTo(self.mas_bottom);
        make.left.mas_equalTo(self.mas_left).offset(16);
        make.right.mas_equalTo(self.mas_right).offset(-16);
        make.height.mas_equalTo(1);
    }];
    [self.separatorLineTop mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.mas_top);
        make.left.mas_equalTo(self.mas_left);
        make.right.mas_equalTo(self.mas_right);
        make.height.mas_equalTo(1);
    }];
    [self.countDownView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(self.mas_centerY);
        make.right.mas_equalTo(self.mas_right).offset(-16);
        make.height.mas_equalTo(30);
        make.width.mas_equalTo(90);
    }];
    [self.markIcon mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(self.mas_centerY);
        make.right.mas_equalTo(self.countDownView.mas_left).offset(-25);
        make.width.height.mas_equalTo(16);
    }];
//    [self.clearIcon mas_makeConstraints:^(MASConstraintMaker *make) {
//        make.centerY.mas_equalTo(self.mas_centerY);
//        make.right.mas_equalTo(self.mas_right).offset(-25);
//        make.width.height.mas_equalTo(20);
//    }];
}

@end
