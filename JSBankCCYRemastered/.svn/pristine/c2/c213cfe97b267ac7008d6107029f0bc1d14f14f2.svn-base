//
//  EncryptKeyboard.m
//  PCDBank
//
//  Created by Jack on 2019/05/06.
//  Copyright © 2019年 yt. All rights reserved.
//

#import "EncryptKeyboard.h"
#import "PassGuardViewController.h"

@interface EncryptKeyboard () <instertWebviewTextDelegate, DoneDelegate>
@property(nonatomic,strong) PassGuardViewController *pgViewController;
@property(nonatomic,strong) JSBaseWebViewController     *viewController;
@property (nonatomic, copy) NSString                *keyboardCallBack;
@property (nonatomic, copy) NSString                *uptKeyboardCallBack;
@property (nonatomic, copy) NSString                *inputId;

@end
@implementation EncryptKeyboard

- (void)handler:(id)data andContext:(PCDContext *)context ResponseCallback:(WVJBResponseCallback )responseCallback {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    self.viewController = (JSBaseWebViewController *)context.viewController;
    
    NSDictionary *dict = (NSDictionary *)data;
    if (!dict.notNull) {return;}
    int muddled                 = [[dict objectForKey:@"muddled"] intValue]; //0不乱序
    self.keyboardCallBack       = [dict objectForKey:@"doHideAction"];
    self.uptKeyboardCallBack    = [dict objectForKey:@"clickKeyBoard"];
    self.inputId                = [dict objectForKey:@"data"];//输入框id
    int  maxLength              = [[dict objectForKey:@"maxLen"] intValue]; //允许输入长度
    NSString *keyBoardtype                = [dict objectForKey:@"type"];
    UIKeyboardType keyboardType = [keyBoardtype isEqualToString:@"Default"] ? UIKeyboardTypeDefault : UIKeyboardTypeNumberPad;

    [self.viewController.view resignFirstResponder];
    
    self.pgViewController = [[PassGuardViewController alloc] init];
    [self.pgViewController.m_tf setWebdelegate:self];
    [self.pgViewController.m_tf set_DoneDelegate:self];
    [self.pgViewController setM_isDispearWithTouchOutside:true];
    [self.pgViewController.m_tf setM_hasstatus:NO];//按键状态
    [self.pgViewController.m_tf setM_isEnablePaste:false];//禁止粘贴
    [self.pgViewController.m_tf setM_iMaxLen:maxLength];//最大长度
    [self.pgViewController.m_tf setM_mode:false];//设置明文状态
    [self.pgViewController.m_tf setKeyboardType:keyboardType];
    [self.pgViewController.m_tf setM_license:License];
    [self.pgViewController.m_tf setM_ikeyordertype:muddled ? KEY_CHAOS_SWITCH_VIEW : KEY_NONE_CHAOS];
    [self.pgViewController.m_tf setM_uiapp:[UIApplication sharedApplication]];
    self.pgViewController.m_bshowtoolbar = NO;
    [self.pgViewController.m_tf setM_strInput1:KAESKey];
    [self.pgViewController show];
    [self.pgViewController.m_tf Clean];
}

- (void)instertWText {
    NSString *outText = self.pgViewController.m_tf.text;
    NSLog(@"outText : %@",outText);
    NSLog(@"self.uptKeyboardCallBack : %@",self.uptKeyboardCallBack);
    NSLog(@"self.strInputId : %@",self.inputId);
    outText = [outText stringByReplacingOccurrencesOfString:@"●" withString:@"1"];
    NSString *updateCallBack =[NSString stringWithFormat:@"'%@','%@'",self.inputId,outText];
    NSLog(@"updateCallBack : %@",updateCallBack);
    
    evaluateJavaScriptOnMainThread(self, self.uptKeyboardCallBack, updateCallBack);
    [self keyBoardInputComplete];
}

- (void)DoneFun:(id)sender {
    [self keyBoardInputComplete];
}

#pragma mark -KeyBoardCompleteFunc
- (void)keyBoardInputComplete {
    NSString *outText = self.pgViewController.m_tf.text;
    if (outText.notNull) {
        NSString *param =[NSString stringWithFormat:@"'%@','%@'",self.inputId,[self.pgViewController m_tf].getOutput1];
        NSLog(@"----- %@",[self.pgViewController m_tf].getOutput1);
        evaluateJavaScriptOnMainThread(self, self.keyboardCallBack, param);
    }
}

@end
