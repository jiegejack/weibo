//
//  WebViewProgress.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/5/27.
//  Copyright Â© 2019 Jack. All rights reserved.
//

#import "WebViewProgress.h"

@interface WebViewProgress ()
@property (nonatomic, strong) CAShapeLayer *progressLayer;
@end
@implementation WebViewProgress

- (id)init {
    if (self = [super init]) {
        UIBezierPath *progressPath = [UIBezierPath bezierPath];
        [progressPath moveToPoint:CGPointMake(0, 0)];
        [progressPath addLineToPoint:CGPointMake(Width, 0)];
        
        self.progressLayer = [[CAShapeLayer alloc] init];
        self.progressLayer.fillColor    = nil;
        self.progressLayer.strokeColor  = Color().MainBlue.CGColor;
        self.progressLayer.lineCap = @"round";
        self.progressLayer.lineJoin = @"round";
        self.progressLayer.path = progressPath.CGPath;
//        self.progressLayer.strokeEnd = 0;
        [self.layer addSublayer:self.progressLayer];
    }
    return self;
}

- (void)layoutSubviews {
    [super layoutSubviews];
    
    self.progressLayer.frame = self.bounds;
}

- (void)setProgress:(CGFloat)progress {
    _progress = progress;
    
    self.progressLayer.strokeColor  = Color().MainBlue.CGColor;

    self.progressLayer.strokeEnd = progress;
    if (progress >= 1) {
        __weak typeof(self) weakSelf = self;
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
            weakSelf.progressLayer.strokeColor  = [[UIColor whiteColor] colorWithAlphaComponent:0.0].CGColor;
        });
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.6 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
//            [weakSelf.progressLayer removeFromSuperlayer];
            weakSelf.progressLayer.strokeEnd = 0;
//            weakSelf.progressLayer = nil;
        });
    }
}

- (void)setStrokColor:(UIColor *)strokColor {
    _strokColor = strokColor;
    
    self.progressLayer.strokeColor  = strokColor.CGColor;
}

- (void)setProgressWidth:(CGFloat)progressWidth {
    _progressWidth = progressWidth;

    self.progressLayer.lineWidth = progressWidth;
}

@end
