//
//  AlertExtension.m
//  AlertView
//
//  Created by Jack on 2019/5/16.
//  Copyright Â© 2019 Jack. All rights reserved.
//

#import "AlertExtension.h"

API_AVAILABLE(ios(8.0))
@interface AlertExtension ()
@property (nonatomic, strong) UIAlertController *alertController;
@property (nonatomic, strong) UIViewController *target;
@property (nonatomic, strong) UIAlertAction *cancelAction;
@property (nonatomic, strong) UIAlertAction *otherAction;
@property (nonatomic, strong) NSString *title;
@property (nonatomic, strong) NSString *message;

@end
@implementation AlertExtension

- (id)alertWithTitle:(NSString *)title message:(NSString *)message target:(UIViewController *)target {
    self.target = target;
    self.title = title;
    self.message = [NSString stringWithFormat:@"\n%@", message];

    if (@available(iOS 8.0, *)) {
        self.alertController = [UIAlertController alertControllerWithTitle:title message:self.message preferredStyle:UIAlertControllerStyleAlert];
    } else {
        // Fallback on earlier versions
    }
    
    return self;
}

- (void)showAlert {
    [self.target presentViewController:self.alertController animated:YES completion:nil];
}

- (void)setCancelButtonTitle:(NSString *)cancelButtonTitle {
    _cancelButtonTitle = cancelButtonTitle;
    
    if (!cancelButtonTitle.notNull) {
        return;
    }
    if (@available(iOS 8.0, *)) {
        self.cancelAction = [UIAlertAction actionWithTitle:cancelButtonTitle style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
            if (self.cancelBlock) {
                self.cancelBlock();
            }
        }];
    } else {
        // Fallback on earlier versions
    }
    [self.alertController addAction:self.cancelAction];
}

- (void)setOtherButtonTitle:(NSString *)otherButtonTitle {
    _otherButtonTitle = otherButtonTitle;
    
    if (!otherButtonTitle.notNull) {
        return;
    }
    if (@available(iOS 8.0, *)) {
        self.otherAction = [UIAlertAction actionWithTitle:otherButtonTitle style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            if (self.otherBlock) {
                self.otherBlock();
            }
        }];
    } else {
        // Fallback on earlier versions
    }
    [self.alertController addAction:self.otherAction];
}

- (void)setOtherButtonColor:(UIColor *)otherButtonColor {
    _otherButtonColor = otherButtonColor;
    
    [self.otherAction setValue:otherButtonColor forKey:@"_titleTextColor"];
}

- (void)setCancelButtonColor:(UIColor *)cancelButtonColor {
    _cancelButtonColor = cancelButtonColor;
    
    [self.cancelAction setValue:cancelButtonColor forKey:@"_titleTextColor"];
}

- (void)setTitleFont:(UIFont *)titleFont {
    _titleFont = titleFont;
    
    [self settingAttributedString:self.title font:titleFont color:self.titleColor forKey:@"attributedTitle"];
}

- (void)setTitleColor:(UIColor *)titleColor {
    _titleColor = titleColor;
    
    [self settingAttributedString:self.title font:self.titleFont color:titleColor forKey:@"attributedTitle"];
}

- (void)setMessageFont:(UIFont *)messageFont {
    _messageFont = messageFont;
    
    [self settingAttributedString:self.message font:messageFont color:self.messageColor forKey:@"attributedMessage"];
}

- (void)setMessageColor:(UIColor *)messageColor {
    _messageColor = messageColor;
    
    [self settingAttributedString:self.message font:self.messageFont color:messageColor forKey:@"attributedMessage"];
}

- (void)settingAttributedString:(NSString *)string font:(UIFont *)font color:(UIColor *)color forKey:(NSString *)key {
    font = font ? font : [UIFont systemFontOfSize:16];
    color = color ? color : [UIColor blackColor];

    NSMutableAttributedString *titleAtt = [[NSMutableAttributedString alloc] initWithString:string];
    [titleAtt addAttribute:NSFontAttributeName value:font range:NSMakeRange(0, string.length)];
    [titleAtt addAttribute:NSForegroundColorAttributeName value:color range:NSMakeRange(0, string.length)];
    [self.alertController setValue:titleAtt forKey:key];
}

@end
