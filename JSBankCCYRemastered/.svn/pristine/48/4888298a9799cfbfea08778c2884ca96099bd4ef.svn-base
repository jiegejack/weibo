//
//  JSSettingPasswordViewController.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/5/9.
//  Copyright © 2019 Jack. All rights reserved.
//

#import "JSSettingPasswordViewController.h"
#import "JSTextFieldView.h"
#import "CoverButton.h"
#import "InitPageTitle.h"

@interface JSSettingPasswordViewController ()
@property (nonatomic, strong) NSArray        *placeholds;
@property (nonatomic, strong) NSArray        *titles;
@property (nonatomic, assign) CGFloat         textField_Height;
@property (nonatomic, strong) NSMutableArray *items;
@property (nonatomic, strong) CoverButton    *coverView;
@property (nonatomic, strong) UIButton       *completeButton;
@property (nonatomic, strong) PassGuardTextField    *loginPassword;
@property (nonatomic, strong) PassGuardTextField    *confirmPsaaword;
@property (nonatomic, assign) CGFloat         coverTop;
@property (nonatomic, assign) CGFloat         coverHeight;

@end

@implementation JSSettingPasswordViewController

- (UIButton *)coverView {
    if (!_coverView) {
        _coverView = [[CoverButton alloc] init];
        _coverView.userInteractionEnabled = NO;
        _coverView.imageView.contentMode = UIViewContentModeScaleAspectFit;
        [_coverView setBackgroundImage:[UIImage imageNamed:@"login_cover.png"] forState:UIControlStateNormal];
        [_coverView setTitle:@"请设置登录密码" forState:UIControlStateNormal];
        _coverView.titleLabel.font = [UIFont systemFontOfSize:15];
        [_coverView setTitleColor:Color().White forState:UIControlStateNormal];
        [self.view addSubview:_coverView];
    }
    return _coverView;
}

- (UIButton *)completeButton {
    if (!_completeButton) {
        _completeButton = [[UIButton alloc] init];
        [_completeButton setTitleColor:Color().White forState:UIControlStateNormal];
        [_completeButton setTitle:@"完成" forState:UIControlStateNormal];
        [_completeButton setBackgroundImage:[UIImage imageNamed:@"loginBtnBackImage.png"] forState:UIControlStateNormal];
        _completeButton.titleLabel.font = [UIFont systemFontOfSize:16];
        _completeButton.layer.cornerRadius = 4;
        _completeButton.clipsToBounds = YES;
        [_completeButton addTarget:self action:@selector(completeAction) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:_completeButton];
    }
    return _completeButton;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self initBaseUI];
    [self initBaseData];
    [self addSubControls];
    [self layoutSubControls];
    
//    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
//        [self userAuthentication];
//    });
}

- (void)initBaseUI {
    self.title = @"注册";
    self.navigationBar.leftBarButtonItem = nil;
    self.navigationBar.backgroundColor = Color().White;
    self.navigationBar.titleItem.titleColor = Color().Black;
    self.navigationBar.separatorColor = Color().Auxiliary;
}

- (void)initBaseData {
    self.titles = @[@"登录密码",
                    @"确认密码"];
    
    self.placeholds = @[@"必须为8-16位数字和字母组合",
                        @"请再次输入登录密码"];
    self.items = [NSMutableArray array];
    
    self.coverTop                      = 13;
    self.coverHeight                   = 30;
    self.textField_Height              = 56;
    self.navigationBar.separatorHeight = 1.0;
}

- (void)initItemsWithIndex:(NSInteger)index {
    JSTextFieldView *item = (JSTextFieldView *)self.items[index];
    switch (index) {
        case 0:
            self.loginPassword   = item.textField;
            break;
        case 1:
            self.confirmPsaaword = item.textField;
            break;
        default:
            break;
    }
}

- (void)completeAction {
//    [self userAuthentication];
//    return;
    [self.view endEditing:YES];

    NSArray *intArray_loginPwd = [self.loginPassword getInputLevel];
    NSNumber *num_loginPwd = intArray_loginPwd.firstObject;
    int firstInt_loginPwd = num_loginPwd.intValue;
    
    NSArray *intArray_confirmPwd = [self.confirmPsaaword getInputLevel];
    NSNumber *num_confirmPwd = intArray_confirmPwd.firstObject;
    int firstInt_confirmPwd = num_confirmPwd.intValue;
    
    if (((self.loginPassword.text.length < 8 || self.loginPassword.text.length > 16) ||
        (self.confirmPsaaword.text.length < 8 || self.confirmPsaaword.text.length > 16)) || (firstInt_loginPwd != 2 || firstInt_confirmPwd != 2)) {
        [JSDeftAlert js_showMessage:@"密码必须为8-16位数字和字母组合" isCentered:NO afterDelay:1.5 completeHandle:nil];
        return;
    }
    if (!self.loginPassword.text.notNull) {
        [JSDeftAlert showMessage:@"请输入登录密码" afterDelay:1.5 completeHandle:nil];
        return;
    }
    if (!self.confirmPsaaword.text.notNull) {
        [JSDeftAlert showMessage:@"请输入确认登录密码" afterDelay:1.5 completeHandle:nil];
        return;
    }
    if (![[self.loginPassword getOutput1] isEqualToString:[self.confirmPsaaword getOutput1]]) {
        [JSDeftAlert showMessage:@"两次密码输入不一致" afterDelay:1.5 completeHandle:nil];
        return;
    }
    __weak typeof(self) weakSelf = self;
    [ClientNetManager fetchSettingPasswordDataWithPwd:[self.loginPassword getOutput1] verifyPwd:[self.confirmPsaaword getOutput1] success:^(id resultResponse, id resultModel) {
        
        NSDictionary *dict = (NSDictionary *)resultResponse;
        
        if ([[dict objectForKey:@"STATUS"] isEqual:@"1"]) {
            [JSDeftAlert showMessage:@"密码设置成功" afterDelay:1.5 completeHandle:^{
                [weakSelf userAuthentication];
            }];
        }
    } failure:^(NSString *MSG, LoginSession *session, id resultResponse) {
        if (MSG.notNull) {
            [JSDeftAlert js_showMessage:MSG isCentered:NO afterDelay:1.5 completeHandle:nil];
        }
    }];
}

//到实名
- (void)userAuthentication {
    NSDictionary *expando = [PCDUtil IsIphoneX]?@{@"NSLayoutAttributeTop":@"88"}:@{@"NSLayoutAttributeTop":@"64"};
    NSDictionary *param = @{@"url" : [PCDUtil getPublicServerURL:@"page/PP01/PP0103/PP0103.html?cancelType=register"]};
    JSBaseWebViewController *webVC = [PCDWServiceGet() createPCDViewController:param viewControllerClass:[JSBaseWebViewController class] contentViewClass:nil withExpando:expando];
    webVC.hidesBottomBarWhenPushed = YES;
    [self.tabBarController.navigationController pushViewController:webVC animated:YES];
    //关闭登录、注册、密码设定页面
    [JSLoginManager popVCsWithTarget:self];
}

- (void)addSubControls {
    __weak typeof(self) weakSelf = self;
    [self.placeholds enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
        JSTextFieldView *textFieldItem = [[JSTextFieldView alloc] init];
        textFieldItem.titleColor = Color().Black;
        textFieldItem.titleLabel.text = weakSelf.titles[idx];
        textFieldItem.showTopSeparator = !idx ? YES : NO;
        [textFieldItem.textField setM_mode:NO];
        textFieldItem.textField.secureTextEntry = YES;
        textFieldItem.textField.inset = !idx ? 30 : 0;
        [textFieldItem.textField setM_ikeyordertype:KEY_CHAOS_SWITCH_VIEW];
        textFieldItem.textField.placeholder = weakSelf.placeholds[idx];
        [weakSelf.view addSubview:textFieldItem];
        [weakSelf.items addObject:textFieldItem];
        [weakSelf initItemsWithIndex:idx];
    }];
}

- (void)layoutSubControls {
    __weak typeof(self) weakSelf = self;

    CGFloat totalFieldHeight = self.placeholds.count * self.textField_Height;
    CGFloat fieldTop         = self.navigationBarHeight + self.coverHeight + self.coverTop;
    CGFloat tailSpacing      = Height - fieldTop - totalFieldHeight;

    [self.items mas_distributeViewsAlongAxis:MASAxisTypeVertical withFixedItemLength:self.textField_Height leadSpacing:self.navigationBarHeight + self.coverHeight + self.coverTop tailSpacing:tailSpacing];
    [self.items mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(weakSelf.view.mas_left);
        make.right.mas_equalTo(weakSelf.view.mas_right);
    }];

    [self.coverView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(weakSelf.view.mas_left);
        make.top.mas_equalTo(weakSelf.view.mas_top).offset(self.navigationBarHeight + self.coverTop);
        make.width.mas_equalTo(Width / 2);
        make.height.mas_equalTo(self.coverHeight);
    }];
    
    [self.completeButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(weakSelf.view.mas_left).offset(16);
        make.top.mas_equalTo(weakSelf.confirmPsaaword.mas_bottom).offset(25);
        make.right.mas_equalTo(weakSelf.view.mas_right).offset(-16);
    }];
}

@end
