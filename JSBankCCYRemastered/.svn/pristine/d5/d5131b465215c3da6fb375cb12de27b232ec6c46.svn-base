//
//  JSProgressHUD.m
//  PiggyBank
//
//  Created by howbuy2014 on 14-12-18.
//  Copyright (c) 2014å¹´ howbuy2014. All rights reserved.
//

#import "JSProgressHUD.h"
#import "MBProgressHUD.h"

@interface MBProgressHUD (HideGesture)

- (void)addGestureToHideProgressHUD;

@end

@implementation MBProgressHUD (HideGesture)

- (void)addGestureToHideProgressHUD
{
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(hideProgressHUD:)];
    tapGesture.numberOfTapsRequired = 1;
    tapGesture.numberOfTouchesRequired = 1;
    [self addGestureRecognizer:tapGesture];
}
- (void)hideProgressHUD:(UIGestureRecognizer *)gesture
{
    if ([JSSharedInstance sharedInstance].HudHiddenBlock) {
        [JSSharedInstance sharedInstance].HudHiddenBlock();
    }
    [self hide:YES];
}
@end

@interface JSProgressHUD ()
{
    NSMutableArray *array;
}

@property (nonatomic, copy) void (^completionBlock)();

@end

@implementation JSProgressHUD
+ (JSProgressHUD *)shareInstance
{
    static JSProgressHUD *progressHUD = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        progressHUD = [[JSProgressHUD alloc] init];
    });
    return progressHUD;
}

+ (void)showProgressHUDInView:(UIView *)view message:(NSString *)message completion:(void (^)())completion {
    [JSProgressHUD shareInstance].completionBlock = completion;
    [JSProgressHUD showProgressHUDInView:view message:message];
}

+ (void)showProgressHUDInView:(UIView *)view message:(NSString *)message
{
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeText;
    hud.detailsLabelText = message;
    hud.margin = 10.f;
    hud.detailsLabelFont = [UIFont systemFontOfSize:15.0f];
    hud.yOffset = -50.0f;
    hud.removeFromSuperViewOnHide = YES;
    hud.cornerRadius = 19;
    hud.completionBlock = [JSProgressHUD shareInstance].completionBlock;
    [hud addGestureToHideProgressHUD];
    
    NSTimeInterval time = 0.2*message.length;
    if(message.length<5) {
        time = 1;
    }
    else if(message.length<10) {
        time = 2;
    }
    else if(message.length<20) {
        time = 4;
    }
    [hud hide:YES afterDelay:time];
}

+ (void)showWaitingIndicatorInView:(UIView *)view
{
    [[JSProgressHUD shareInstance] showWaitingIndicatorInView:view];
}

+ (void)showWhiteWaitingIndicatorInView:(UIView *)view{
    [[JSProgressHUD shareInstance] showWhiteWaitingIndicatorInView:view];
}


+ (void)showWaitingIndicatorInView:(UIView *)view withMessage:(NSString *)message
{
    [[JSProgressHUD shareInstance] showWaitingIndicatorInView:view withMessage:message];

}
+ (void)showWaitingIndicatorCanTouchInView:(UIView *)view withMessage:(NSString *)message{
    [[JSProgressHUD shareInstance] showWaitingIndicatorCanTouchInView:view withMessage:message];
}

+ (void)showWaitingIndicatorCanTouchInView:(UIView *)view {
    [[JSProgressHUD shareInstance] showWaitingIndicatorCanTouchInView:view];
}

+ (void)hideWaiting
{
    [[JSProgressHUD shareInstance] hideWaiting];
}

+ (void)hideUnAnimationWaiting {
    [[JSProgressHUD shareInstance] hideUnAnimationWaiting];
}

- (id)init
{
    self = [super init];
    if(self) {
        array = [NSMutableArray arrayWithCapacity:10];
    }
    return self;
}

- (void)showWaitingIndicatorInView:(UIView *)view
{
    [self hideWaiting];
    
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.bezelView.backgroundColor = [UIColor blackColor];
    hud.activityIndicatorColor = [UIColor whiteColor];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.yOffset = -50.0f;
    hud.color = [UIColor blackColor];
    hud.completionBlock = [JSProgressHUD shareInstance].completionBlock;
    [JSProgressHUD shareInstance].completionBlock = ^{
        
    };
    [hud addGestureToHideProgressHUD];
    [array addObject:hud];
}

- (void)showWhiteWaitingIndicatorInView:(UIView *)view{
    [self hideWaiting];
    
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.yOffset = -50.0f;
    hud.color = [UIColor clearColor];
    [array addObject:hud];

}

- (void)showWaitingIndicatorInView:(UIView *)view withMessage:(NSString *)message
{
    [self hideWaiting];
    
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.detailsLabelText = message;
    hud.margin = 10.f;
    hud.detailsLabelFont = [UIFont systemFontOfSize:15.0f];
    hud.yOffset = -50.0f;
    hud.color = [UIColor colorWithRed:0.0f green:0.0f blue:0.0f alpha:0.5];
    [array addObject:hud];
}

- (void)showWaitingIndicatorCanTouchInView:(UIView *)view
{
    [self hideWaiting];
    
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.yOffset = -50.0f;
    hud.color = [UIColor colorWithRed:0.0f green:0.0f blue:0.0f alpha:0.5];
    hud.userInteractionEnabled = NO;
    [array addObject:hud];
}

- (void)showWaitingIndicatorCanTouchInView:(UIView *)view withMessage:(NSString *)message{
    [self hideWaiting];
    
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.yOffset = -50.0f;
    hud.detailsLabelText = message;
    hud.color = [UIColor colorWithRed:0.0f green:0.0f blue:0.0f alpha:0.5];
    hud.userInteractionEnabled = NO;
    [array addObject:hud];
}



- (void)hideWaiting
{
    for(MBProgressHUD *hud in array) {
        [hud hide:YES];
    }
}

- (void)hideUnAnimationWaiting {
    for(MBProgressHUD *hud in array) {
        [hud hide:NO];
    }
}


+ (void)showWaitingWithIndicatorInView:(UIView *)view withMessage:(NSString *)message
{
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:view animated:YES];
    hud.mode = MBProgressHUDModeIndeterminate;
    hud.detailsLabelText = message;
    hud.margin = 10.f;
    hud.detailsLabelFont = [UIFont systemFontOfSize:15.0f];
    hud.yOffset = -50.0f;
    hud.color = [UIColor colorWithRed:0.0f green:0.0f blue:0.0f alpha:0.5];
}

+ (void)hideHUDForView:(UIView *)view{
    [MBProgressHUD hideAllHUDsForView:view animated:NO];
}

@end
