//
//  JSSearchViewController.m
//  JSBankCCY
//
//  Created by Jack on 2019/2/27.
//  Copyright © 2019 张瑞. All rights reserved.
//

#import "JSSearchViewController.h"
//#import "CustomButtom.h"
#import "JSRecordManager.h"

NSString * const funcName       = @"App.fuzzySearch";
NSString * const searchFuncName = @"App.searchByhis";

@interface JSSearchViewController () <UITextFieldDelegate>
@property (nonatomic, strong) UITextField  *searchField;
@property (nonatomic, copy)   NSString     *placeholderContent;
@property (nonatomic, strong) UIButton     *rightIcon;

@property (nonatomic, strong) UIImageView *voiceWave;//动画图
@property (nonatomic, assign) CGFloat keyBoardHeight;//键盘高度

@end

@implementation JSSearchViewController

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardDidShowNotification object:nil];
}

- (void)viewDidLayoutSubviews {
    [super viewDidLayoutSubviews];
    
//    self.searchField.layer.cornerRadius = self.searchField.frame.size.height / 2;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationBar.backgroundColor = [UIColor blueColor];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil];

    [self settingSearchFieldControl];
    [self fetchPlaceholderContent];
    [self layouSubControls];
}

- (void)settingSearchFieldControl {
    self.searchField = [[UITextField alloc] init];
    self.searchField.font = [UIFont systemFontOfSize:14];
    self.searchField.textColor = [UIColor colorWithRed:0.67 green:0.67 blue:0.67 alpha:1.00];
    self.searchField.tintColor = [UIColor grayColor];
    self.searchField.returnKeyType = UIReturnKeySearch;
    self.searchField.clearButtonMode = UITextFieldViewModeAlways;
    self.searchField.delegate = self;
    self.searchField.leftView = [self leftView];
    self.searchField.rightView = [self rightView];
    self.searchField.inputAccessoryView = [self inputAccessoryView];
    self.searchField.leftViewMode = UITextFieldViewModeAlways;
    self.searchField.rightViewMode = UITextFieldViewModeAlways;
    self.searchField.backgroundColor = [UIColor whiteColor];
    self.searchField.layer.masksToBounds = YES;
    [self.searchField addTarget:self action:@selector(textChanged:) forControlEvents:UIControlEventEditingChanged];
    [self.navigationBar addSubview:self.searchField];
    self.searchField.layer.cornerRadius = 15;

}

- (void)keyboardDidShow:(NSNotification *)notif {
    NSDictionary *useInfo = [notif userInfo];
    NSValue *value        = [useInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGRect rect           = [value CGRectValue];

    if ([notif.name isEqualToString:@"UIKeyboardDidShowNotification"]) {
        self.keyBoardHeight = rect.size.height;
    }
}

- (UIView *)inputAccessoryView {
    UIView *accessoryView = [[UIView alloc] init];
    accessoryView.backgroundColor = [UIColor colorFormString:@"#f3f6f6"];
    accessoryView.frame = CGRectMake(0, 0, Width, 42);
//    accessoryView.width  = SCREEN_WIDTH;
//    accessoryView.height = 42;
    
    UIImageView *voiceTap = [[UIImageView alloc] init];
    voiceTap.userInteractionEnabled = YES;
    voiceTap.contentMode = UIViewContentModeScaleAspectFit;
    voiceTap.image = [UIImage imageNamed:@"语音按钮"];
    [accessoryView addSubview:voiceTap];
    
    UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPress:)];
    longPress.minimumPressDuration = 1.0;
    [accessoryView addGestureRecognizer:longPress];
    
    [voiceTap mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(accessoryView.mas_centerX);
        make.top.mas_equalTo(accessoryView.mas_top).offset(5);
        make.bottom.mas_equalTo(accessoryView.mas_bottom).offset(-5);
    }];
    
    return accessoryView;
}

- (void)longPress:(UIGestureRecognizer *)gesture {
    if (gesture.state == UIGestureRecognizerStateBegan) { //长按语音按钮
        [self startRecordAnimation];
        [[JSRecordManager shareInstance] startRecord];
    }
    if (gesture.state == UIGestureRecognizerStateEnded     ||
        gesture.state == UIGestureRecognizerStateCancelled ||
        gesture.state == UIGestureRecognizerStateRecognized) { //取消长按语音按钮
        [self stopRecordAnimation];
        
        __weak typeof(self) weakSelf = self;
        [[JSRecordManager shareInstance] stopRecordCompleted:^(NSString * _Nonnull recordBase64) {
            [weakSelf fetchVoiceResultWithBase64:recordBase64];
        }];
    }
}

- (void)fetchVoiceResultWithBase64:(NSString *)base64 {
//    __weak typeof(self) weakSelf = self;
//    NSData *postData = [self getPostDataWithParam:@{@"fileStr" : base64}];
//    [CCYHttpRequestManager requstWithURL:[PNCShareUtil getServerURL:Server_Record_URL] requestPostData:postData requestCompleteHandle:^(NSDictionary *resultDataDict) {
//        if ([[resultDataDict objectForKey:@"STATUS"] integerValue] == 1) {
//            NSString *result = [resultDataDict objectForKey:@"result"];
//            if (result.notNull) {
//                weakSelf.searchField.text = result;
//                [weakSelf textChanged:weakSelf.searchField];
//            }
//        }
//    } requestFailedHandle:^(NSString *errorMessage) {}];
}

- (NSData *)getPostDataWithParam:(NSDictionary *)param {
//    NSString *finalJson=[param JSONRepresentation];
    NSString *dataStr=@"";//[PNCUtil getFinalStringWithString:finalJson];

    return [dataStr dataUsingEncoding:NSUTF8StringEncoding];
}

- (void)startRecordAnimation {
    CGFloat height = 50; //toolBar高度
    CGFloat margin = 70; //动画位置距离toolBar顶部
    self.voiceWave.frame = CGRectMake(0, Height - self.keyBoardHeight - margin - height, Width, height);
    [self.voiceWave startAnimating];
}

- (void)stopRecordAnimation {
    [self.voiceWave stopAnimating];
    [self.voiceWave removeFromSuperview];
    self.voiceWave = nil;
}

- (UIImageView *)voiceWave {
    if (!_voiceWave) {
        _voiceWave = [[UIImageView alloc] init];
        _voiceWave.contentMode = UIViewContentModeScaleAspectFit;
        _voiceWave.animationDuration = 0.6;
        [self.view addSubview:_voiceWave];
        _voiceWave.animationImages = [NSArray arrayWithObjects:[UIImage imageNamed:@"wave1"],
                                                               [UIImage imageNamed:@"wave2"],
                                                               [UIImage imageNamed:@"wave3"],
                                                               [UIImage imageNamed:@"wave4"], nil];
    }
    return _voiceWave;
}

- (void)rightViewAction {
    if (self.searchField.text.notNull) {
        self.searchField.text = NULL;
        [self updateRightView];
        [self evalJs:[NSString stringWithFormat:@"%@('%@')",funcName,self.searchField.text]];
    }
}

- (UIView *)rightView {
//    CGFloat iconSize  = 20;
    
    UIView *bottomView = [[UIView alloc] init];
//    bottomView.backgroundColor = [UIColor redColor];
//    bottomView.frame = CGRectMake(0, 0, 30, 30);
    [bottomView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.width.height.mas_equalTo(30);
    }];
    
    self.rightIcon = [[UIButton alloc] init];
    self.rightIcon.hitTestEdgeInsets = UIEdgeInsetsMake(-20, -20, -20, -20);
    self.rightIcon.imageView.contentMode = UIViewContentModeScaleAspectFit;
//    self.rightIcon.backgroundColor = [UIColor redColor];
    self.rightIcon.hidden = YES;
    [self.rightIcon setImage:[UIImage imageNamed:@"clear"] forState:UIControlStateNormal];
    [self.rightIcon addTarget:self action:@selector(rightViewAction) forControlEvents:UIControlEventTouchUpInside];
    [bottomView addSubview:self.rightIcon];
    
    [self.rightIcon mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(bottomView.mas_centerY);
        make.left.mas_equalTo(bottomView.mas_left);
        make.width.height.mas_equalTo(18);
    }];

    return bottomView;
}

- (UIView *)leftView {
    CGFloat contentViewWidth  = 36;
    CGFloat contentViewHeight = 30;
    UIView *contentView = [[UIView alloc] init];
    contentView.frame = CGRectMake(0, 0, contentViewWidth, contentViewHeight);
    contentView.backgroundColor = [[UIColor whiteColor] colorWithAlphaComponent:0.0];
    
    CGFloat width  = 18;//宽度
    CGFloat height = 18;//高度
    CGFloat margin = 6; //图标与光标间隔
    UIImageView *iconView = [[UIImageView alloc] init];
    iconView.frame = CGRectMake(CGRectGetWidth(contentView.frame) - width - margin, (CGRectGetHeight(contentView.frame) - height) / 2, width, height);
    iconView.backgroundColor = [[UIColor whiteColor] colorWithAlphaComponent:0.0];
    iconView.image = [UIImage imageNamed:@"searchIcon"];
    [contentView addSubview:iconView];
    
    return contentView;
}

#pragma mark - 获取输入框默认内容
- (void)fetchPlaceholderContent {
//    __weak typeof(self) weakSelf = self;
//    [CCYHttpRequestManager requstWithURL:[PNCShareUtil getServerURL:Server_placeholder_URL] requestPostData:nil requestCompleteHandle:^(NSDictionary *resultDataDict) {
//         if (resultDataDict) {
//             weakSelf.placeholderContent = [resultDataDict objectForKey:@"placeholder"];
//             NSString *status = [resultDataDict objectForKey:@"STATUS"];
//             if (status.integerValue == 1) {
//                 weakSelf.searchField.placeholder = weakSelf.placeholderContent.notNull ? weakSelf.placeholderContent : @"";
//             }
//         }
//     } requestFailedHandle:^(NSString *errorMessage) {}];
}

- (void)layouSubControls {
    CGFloat sideWidth = 55;//搜索框两边间距
    [self.searchField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.navigationBar.mas_top).offset(STATUSBAR_HEIGHT + 6);
        make.bottom.mas_equalTo(self.navigationBar.mas_bottom).offset(-8);
        make.centerX.mas_equalTo(self.navigationBar.mas_centerX);
        make.width.mas_equalTo(Width - sideWidth * 2);
    }];
    

}

#pragma mark - 逐步搜索
- (void)textChanged:(id)textField {
    NSString *inputContent = self.searchField.text.notNull ? self.searchField.text : @"";
    [self evalJs:[NSString stringWithFormat:@"%@('%@')",funcName,inputContent]];

    [self updateRightView];
}

- (void)updateRightView {
    self.rightIcon.hidden = self.searchField.text.notNull ? NO : YES;
}

#pragma mark - 完整搜索
- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    NSString *searchContent = self.searchField.text.notNull ? self.searchField.text : self.placeholderContent;
    if (!searchContent.notNull) {
        return NO;
    }
    [self evalJs:[NSString stringWithFormat:@"%@('%@')",searchFuncName,searchContent]];
    [self.view endEditing:YES];

    return YES;
}


@end
