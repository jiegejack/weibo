//
//  JLObuSDK.h
//  JLObuSDK
//
//  Created by juli on 2017/8/18.
//  Copyright © 2017年 juli.comm.cn. All rights reserved.
//
/* 定义回调函数 */
typedef void(^obuCallBack)(Boolean status,NSObject * _Nullable data,NSString * _Nullable errorMsg);

#import <Foundation/Foundation.h>

@class CBPeripheral;
@class JLBleDevice;
@protocol JLObuSDKDelegate;

@interface JLObuSDK : NSObject

@property (weak,nonatomic) id<JLObuSDKDelegate> _Nullable delegate;


#pragma mark - SDK初始化

/*ObuSDK单例*/
+(JLObuSDK * _Nonnull) sharedObuSDK;

+(JLObuSDK * _Nonnull) setObuActionDelegate:(id<JLObuSDKDelegate> _Nullable)delegate;



#pragma mark - 扫描、连接、连接状态

/* 检测蓝牙开启 */
-(Boolean) isEnabledBluetooth;

/**
 *  检查OBU连接
 *
 *  @param callBack 回调
 回调参数:  status:  已连接:YES  未连接:NO
 data:    已连接: (NSDictionary <NSString * , NSString *> *)
 例:@{@"name":peripheral.name , @"address":(peripheral.identifier.UUIDString)}
 未连接: nil
 *
 *  @return 连接状态 CardOwnerRecord : 已连接:YES  未连接:NO
 */
-(Boolean) checkConnection:(obuCallBack _Nonnull)callBack;

/**
 *  扫描设备
 *
 *  @param timeOut 超时时间 (<=0时候  SDK会设置默认时限)
 *  @param callBack    回调 (data: NSArray< NSDictionary<NSString * , NSString *> *> *  例如:@[@{@"name":xxx,@"address":xxx,@"rssi":xxx}])
 */
-(void) searchDevice:(int)timeOut callBack:(obuCallBack _Nonnull)callBack;


/**
 开始搜索设备，搜索到设备通过setObuActionDelegate 回调
 
 @param callBack 回调
 */
-(void) startScan:(obuCallBack _Nonnull)callBack;

/**
 停止搜索设备
 */
-(void) stopScan;

/**
 *  连接OBU设备
 *
 *  @param timeout  超时时间 (<=0时候  SDK会设置默认时限)
 *  @param callBack 回调 (data: nil)
 */
-(void) connectDevice:(int)timeout callBack:(obuCallBack _Nonnull)callBack;

/**
 *  连接OBU设备
 *
 *  @param name       设备名称
 *  @param timeout    超时时间 (<=0时候  SDK会设置默认时限)
 *  @param callBack   回调 (data: nil)
 */
-(void) connectDeviceWithName:(NSString * _Nonnull)name timeout:(int)timeout callBack:(obuCallBack _Nonnull)callBack;

/**
 *  连接OBU设备
 *
 *  @param name     设备名称
 *  @param uuid     设备标识(peripheral.identifier.UUIDString)
 *  @param timeout  超时时间 (<=0时候  SDK会设置默认时限)
 *  @param callBack 回调 (data: nil)
 */
-(void) connectDeviceWithId:( NSString* _Nonnull)uuid name:(NSString* _Nullable)name timeout:(int)timeout callBack:(obuCallBack _Nonnull)callBack;

/**
 *  断开OBU设备
 *
 *  @param callBack 回调 (data: nil)
 */
-(void) disconnectDevice:(obuCallBack _Nonnull)callBack;



/**  ===========================  业务接口  ==========================  */

/**
 *  读取卡信息
 *
 *  @param callBack 回调 (data:NSDictionary * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) getCardInformation:(obuCallBack _Nonnull)callBack;

/**
 *  读取OBU 的电量信息
 *
 *  @param callBack 回调
 */
-(void) checkBattery:(obuCallBack _Nonnull)callBack;

/**
 *  读取OBU 的 版本信息
 *
 *  @param callBack 回调
 */
-(void) getVersion:(obuCallBack _Nonnull)callBack;

/**
 *  获取OBU的设备信息
 *
 *  @param callBack 回调 @{@"devid":devIdStr,@"contractid":contractStr}
 */
-(void) getObuInformation:(obuCallBack _Nonnull)callBack;

/**
 *  读取持卡人信息
 *
 *  @param callBack 回到 (data:NSDictionary * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) readCardOwnerRecord:(obuCallBack _Nonnull)callBack;

/**
 *  圈存初始化
 *  @param tradeNo    交易编号 32个字符
 *  @param credit     充值金额，4个字符（分）
 *  @param cardId     卡号 16个字符
 *  @param terminalNo 终端机编号 12 个字符
 *  @param pinCode    PIN码 6位
 *  @param procType   交易类型 (ED:01  EP:02) 2个字符
 *  @param keyIndex   秘钥索引 2个字符
 *  @param callBack   回调 (data:NSDictionary * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) loadCreditGetMac1:(NSString *_Nonnull)tradeNo credit:(NSString * _Nonnull)credit cardId:(NSString * _Nonnull)cardId  terminalNo:(NSString * _Nonnull)terminalNo pinCode:(NSString * _Nonnull)pinCode procType:(NSString * _Nonnull)procType keyIndex:(NSString * _Nonnull)keyIndex callBack:(obuCallBack _Nonnull)callBack;

/**
 *  圈存写卡
 *
 *  @param dateMAC2 包含日期与Mac2的字符串  (格式：14位日期yyyymmddhhmmss + 8位mac2)
 *  @param callBack 回调 (data: NSDictionary * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) loadCreditWriteCard:(NSString * _Nonnull)dateMAC2 callBack:(obuCallBack _Nonnull)callBack;

/**
 *  读终端交易记录文件
 *
 *  @param pinCode   PIN码
 *  @param maxNumber 需读取的记录数量
 *  @param callBack  回调 (data:NSArray<NSDictionary *> * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) readCardTransactionRecord:(NSString * _Nonnull)pinCode maxNumber:(int)maxNumber callBack:(obuCallBack _Nonnull)callBack;

/**
 *  读联网收费复合消费过程文件
 *
 *  @param maxNumber 需读取的记录数量
 *  @param callBack  回调 (data:NSArray<NSDictionary *> * 详文见<<蓝牙终端接口规范V1.5>>)
 */
-(void) readCardConsumeRecord:(int)maxNumber callBack:(obuCallBack _Nonnull)callBack;

/**
 *  卡片复位
 *
 *  @param callBack 回调 (data:NSString * 响应内容)
 *                  回调中的参数: status :  状态码, 成功:YES  失败:NO
 *                              data   :  成功: NSData类型,表示卡片相关信息,此信息不唯一
 失败:  1: nil,                原因: 未连接设备
 2: NSdata类型, 值:0a01  原因:卡片不存在,或卡片位置不对
 3: NSData类型, 值:Oa02  原因:设备对系统做认证,不能进行业务
 
 *                             errorMsg:  成功:nil
 失败: 1:NSString类型, 值:"未连接OBU设备"          原因:未连接设备
 2:NSString类型, 值:"未读取到IC卡活IC卡不存在" 原因:卡片不存在,或卡片位置不对
 3:NSString类型, 值:"设备未认证系统"          原因:设备未认证系统
 */
-(void) resetCardCommandWithCallBack:(obuCallBack _Nonnull)callBack;

/**
 *  卡片通道
 *
 *  @param command  卡片指令(ICC通道 向OBU发送一条指令,且只能是一条数据,数据的类型是NSString类型,例:@"00a40000021001")
 *  @param callBack 回调 (data:NSString * 响应内容)
 */
-(void) cardCommand:(NSString * _Nonnull)command callBack:(obuCallBack _Nonnull)callBack;

/**
 *  透明通道 (向设备发送多条指令,通道可选择ICC或ESAM两个)
 *
 *  @param cmd        通道选择 (ESAM通道: 02  ICC通道:其他)
 *  @param encode     是否加密 (加密:YES 不加密:NO)
 *  @param reqData    指令组合 (格式: 指令总条数(1byte)+指令1长度(1byte)+指令1数据(n byte)+指令2长度(1byte)+指令2数据(n byte)+…..)
 *  @param reqDataLen 指令组合总长度
 *  @param callBack   回调 (data:NSData *  <与指令组合格式相同 > 详文见<<蓝牙终端接口规范V1.5>>)
 */
- (void) transCommand:(NSString * _Nonnull)cmd encode:(Boolean)encode reqData:(NSData * _Nonnull)reqData reqDataLen:(NSUInteger)reqDataLen callBack:(obuCallBack _Nonnull)callBack;


/**
 非秘钥激活

 @param cmd （cmd 非必要参数不使用时填写nil，为非秘钥激活 ）
 */
- (void) initiateOBU:(NSString *_Nonnull)cmd callBack:(obuCallBack _Nonnull)callBack;


/**
 *  设备握手
 *
 *  @param callBack 回调 (data:nil)
 */
- (void)shakeHands:(obuCallBack _Nonnull)callBack;

/**
 绑定OBU
 
 @param uuid 设备UUID
 @param callBack 回调
 */
- (void)bindOBU:(NSString *_Nonnull)uuid callBack:(obuCallBack _Nonnull)callBack;

/**
 *   解绑OBU
 *
 *  @param callBack 回调 (data:nil)
 */
- (void)unbindOBU:(obuCallBack _Nonnull)callBack;


/**  ===========================  业务接口结束  ==========================  */


#pragma mark - 微信 + 24 认证

/**
 获取设备的SN和随机数

 @param callBack 回调
 */
-(void)getDeveiceSN:(obuCallBack _Nonnull)callBack;


/**
 生成离线授权报文

 @param authData 从服务器获取的数据
 @param snData 第一次获取的SN号
 @param callBack 回调
 */
- (void)checkAuthData:(NSData* _Nonnull)authData deviceSN:(NSData* _Nonnull)snData callBack:(obuCallBack _Nonnull)callBack;


/**
 计算激活报文并且去激活设备

 @param authData 离线授权报文
 @param requestData 连接授权请求
 @param deviceSN 设备SN号（非ASCII形式）
 @param callBack callBack回调
 */
- (void)initAuthDevData:(NSData* _Nonnull)authData requestData:(NSData* _Nonnull)requestData DeviceSN:(NSData * _Nonnull)deviceSN callBack:(obuCallBack _Nonnull)callBack;

#pragma mark - ESAM && ICC密文

/**
 ESAM通道(明文)
 */
-(void)esam_ChannelWithCos:(NSString *_Nonnull)command callBack:(obuCallBack _Nonnull )callBack;

/**
 ESAM通道(密文)
 */
-(void)esam_ChannelWithSecretCos:(NSString *_Nonnull)command callBack:(obuCallBack _Nonnull )callBack;

/**
 ICC密文通道
 */
- (void)icc_ChannelWithSecretCos:(NSString * _Nonnull)secCos callBack:(obuCallBack _Nonnull )callBack;

/**
 ESAM复位
 */
- (void)esamResetWithCallBack:(obuCallBack _Nonnull )callBack;


/**  ===========================  微信 + 33的接口  ==========================  */

#pragma mark - 微信 + 33 调试接口

/**
 获取电池电量
 
 @param callBack 回调
 */
-(void)getBatteyRemain:(obuCallBack _Nonnull)callBack;

/**
 获取蓝牙Mac
 
 @param callBack 回调
 */
-(void)getBleMacWithCallBack:(obuCallBack _Nonnull)callBack;

/**
 设置蓝牙Mac
 
 */
-(void)setMac:(NSString * _Nonnull)mac callBack:(obuCallBack _Nonnull)callBack;

/**
 设置设备SN号
 
 @param sn SN号
 @param callBack 回调
 */
-(void)setSN:(NSString *_Nonnull)sn callBack:(obuCallBack _Nonnull)callBack;


/**
 设备复位
 
 @param callBack 回调
 */
-(void)getDeveiceInitWithCallBack:(obuCallBack _Nonnull)callBack;


/**
 更新密钥
 
 @param cosData 密钥
 @param callBack 回调
 */
-(void)upDateKey:(NSData *_Nonnull)cosData callBack:(obuCallBack _Nonnull)callBack;

/**  ===========================  微信 + 33的接口结束  ==========================  */

@end


//协议方法
@protocol JLObuSDKDelegate <NSObject>

/**
 连接蓝牙设备成功后，回调该函数
 */
-(void) didDeviceConnected;

/**
 连接蓝牙设备连接失败后，回调该函数
 */
-(void) didDeviceConnectFailed;

/**
 蓝牙设备断开连接后，回调该函数
 */
-(void) didDeviceDisConnected;

/**
 发现蓝牙设备
 
 @param obu 蓝牙设备
 @param szDesc 描述信息
 */
-(void) didDiscoverBlueObu:(JLBleDevice* _Nonnull)obu
                      desc:(NSString* _Nullable)szDesc;

@end
