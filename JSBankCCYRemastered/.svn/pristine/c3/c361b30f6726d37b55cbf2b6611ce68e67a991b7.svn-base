//
//  AppDelegate.m
//  JSBankCCYRemastered
//
//  Created by Jack on 2019/4/2.
//  Copyright © 2019 Jack. All rights reserved.
//

#import "AppDelegate.h"
#import "JSTabBarController.h"
#import "JSSplashScreenViewController.h"
/**
 *分享SDK
 */
#import "WXApi.h"
#import "WeiboSDK.h"
#import <ShareSDK/ShareSDK.h>
#import <ShareSDKConnector/ShareSDKConnector.h>

#import "PCDEncryptTokenManager.h"
#import "LocationManager.h"

#import "CCYVersionAlertView.h"
#import "NetWorkObserver.h"
#import "UserPrivateView.h"
#import "AlertViewInfo.h"
@interface AppDelegate ()
@property(nonatomic, strong) UIView *coverView;
@property(nonatomic, strong) JSSplashScreenViewController *splashVC;
@property(nonatomic, strong) UIWindow *rootWindow;
@property (nonatomic, strong) UIView *coverView1;

@end

@implementation AppDelegate

- (UIView *)coverView {
    if (!_coverView) {
        _coverView = [[UIView alloc] init];
        _coverView.frame = self.window.bounds;
        
        if (@available(iOS 8.0, *)) {
            UIBlurEffect *blur = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight];
            UIVisualEffectView *effectview = [[UIVisualEffectView alloc] initWithEffect:blur];
            effectview.frame = _coverView.frame;
            [_coverView addSubview:effectview];
        } else {
            UIToolbar *toolbar = [[UIToolbar alloc] initWithFrame:_coverView.frame];
            toolbar.barStyle = UIBarStyleDefault;
            [_coverView addSubview:toolbar];
        }
    }
    return _coverView;
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    // 启动图片延时: 1秒
    [NSThread sleepForTimeInterval:1.0];
    self.rootWindow = [UIApplication sharedApplication].delegate.window;

    [self initNetWorkConfig];
    [[[JSSplashScreenViewController alloc] init] fetchSplashInfo];

    [self initShareSDK];
    
    [self startRootView];
    [self checkVersion];

    return YES;
}

- (void)initNetWorkConfig {
    PCDNetWorkServiceGet().useEncrypt = YES;
    PCDNetWorkServiceGet().encyptScheme = @"v2";
    [PCDNetWorkServiceGet() start];
    
    NSString *baseUrl = [PCDUtil isReleaseVersion] ? @"https://card.jsbchina.cn" : @"https://ccytest.jsbchina.cn:9000";
    [PCDWebCacheModel preloadWebResourceWithBaseUrl:baseUrl];
}

- (void)checkDeviceNet {
    [[NetWorkObserver shareInstance] observerNetWorkState:^(NetworkStatus state) {
        static BOOL flag = NO;
        NSString *msg_wifi = flag ? @"您已切换至wifi网络，请确保网络安全" : @"您正在使用wifi网络，请确保网络安全";
        if (state == ReachableViaWiFi) {
            flag = YES;
            [JSDeftAlert js_showMessage:msg_wifi isCentered:NO afterDelay:1.6 completeHandle:nil];
        }
    }];
}

- (void)initShareSDK {
    [ShareSDK registPlatforms:^(SSDKRegister *platformsRegister) {
        
        //微博
        [platformsRegister setupSinaWeiboWithAppkey:@"729557064"
                                          appSecret:@"59e3f5686eae268bd4331effb86d7947"
                                        redirectUrl:@"https://vbank.jsbchina.cn/wxcm/index.do"];
        
        //微信
        [platformsRegister setupWeChatWithAppId:@"wx9971e098cdaa49e7"
                                      appSecret:@"60abaf6330712ea730af2708b2d93575"];
    }];
}

#pragma mark - 初始化主页
- (void) startRootView {
    __weak typeof(self) weakSelf = self;
    
    if ([PCDGuidenceViewController appFirstLaunch]) {
        //引导页
        NSArray *resource = [self guidenceResource];
        if (!resource.count) {
            return;
        }
        PCDGuidenceViewController *guidenceVC =[[PCDGuidenceViewController alloc]initWithImagesName:resource];
        guidenceVC.pageControl.hidden = YES;
        guidenceVC.doneBtnImage = [UIImage imageNamed:@"skip.png"];
        [guidenceVC setDismiss:^{
            [weakSelf initRootViewController];
        }];
        
        UIScrollView *scr = (UIScrollView *)guidenceVC.view.subviews.firstObject;
        UIImageView *imageView = (UIImageView *)scr.subviews.lastObject;
        NSLog(@"%@",imageView.subviews);
        UIButton *button = (UIButton *)imageView.subviews.firstObject;
        CGFloat W = 2 * Width / 3 - 30;
        CGFloat H = 44;
        CGFloat X = (Width - W) / 2;
        CGFloat Y = Height - (BANG_SCREEN ? 30 : 20) - H;
        
        button.frame = CGRectMake(X, Y, W, H);

        self.rootWindow.rootViewController = guidenceVC;
        [self.rootWindow makeKeyAndVisible];
   
        [self addPrivate];
    } else {
        [self initRootViewController];
        //闪屏
        if ([JSSplashScreenViewController canShowImage]) {
            UIWindow *window = [UIApplication sharedApplication].delegate.window;
            self.splashVC = [[JSSplashScreenViewController alloc] init];
            __block UIView *splashView = self.splashVC.view;
            self.splashVC.dissmisBlock = ^{
                [splashView removeFromSuperview];
                splashView = nil;
                [weakSelf checkDeviceNet];
            };
            splashView.frame = window.bounds;
            [window addSubview:splashView];
        }
    }
    [self checkDeviceRoot];
}

- (void)addPrivate {
    self.coverView1 = [[UIView alloc] init];
    self.coverView1.backgroundColor = [[UIColor blackColor] colorWithAlphaComponent:0.76];
    [[UIApplication sharedApplication].delegate.window addSubview:self.coverView1];
    [self.coverView1 mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.mas_equalTo([UIApplication sharedApplication].delegate.window);
    }];
    
    __block UserPrivateView *privateView = [[UserPrivateView alloc] init];
    privateView.layer.masksToBounds = YES;
    privateView.layer.cornerRadius = 10;
    privateView.block = ^{
        [self.coverView1 removeFromSuperview];
        [privateView removeFromSuperview];
        self.coverView1 = nil;
        privateView = nil;
    };
    privateView.backgroundColor = [UIColor whiteColor];
    //    view.frame = CGRectMake(30, 30, [UIScreen mainScreen].bounds.size.width - 60, [UIScreen mainScreen].bounds.size.height);
    [self.coverView1 addSubview:privateView];
    [privateView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.coverView1.mas_top).offset(STATUSBAR_HEIGHT + 50);
        make.left.mas_equalTo(self.coverView1.mas_left).offset(20);
        make.right.mas_equalTo(self.coverView1.mas_right).offset(-20);
        make.bottom.mas_equalTo(self.coverView1.mas_bottom).offset(-90);
    }];
}

- (NSArray *)guidenceResource {
    NSInteger imageCount = 5;
    NSMutableArray *imagesResource = [NSMutableArray array];
    NSString *screen_Resolution = SCREENSIZE_IS_XR ? @"828x1792" : ScreenResolution;//xr分辨率(750x1624)
    for (NSInteger index = 1; index < imageCount + 1; index++) {
        NSString *imageName = [NSString stringWithFormat:@"GuideImage%@-%ld.png",screen_Resolution,index];
        [imagesResource addObject:imageName];
    }
    return (NSArray *)imagesResource;
}

- (void)checkDeviceRoot {
    BOOL isJailbreak = [PCDevice isJailbreak];
    if (isJailbreak) {
        [self.splashVC stopTimer];
        [JSDeftAlert showAlert:@"您的手机设备不安全" doneTitle:@"确定" cancelTitle:nil doneHandle:^{
            exit(0);
        } cancelHandle:nil];
    }
}

- (void)initRootViewController {
    JSTabBarController *tabBarController =[[JSTabBarController alloc]init];
    
    UINavigationController *rootNav =[[UINavigationController alloc] initWithRootViewController:tabBarController];
    rootNav.navigationBarHidden = YES;
    self.rootWindow.rootViewController = rootNav;
    self.rootWindow.backgroundColor = [UIColor whiteColor];
    [self.rootWindow makeKeyAndVisible];
    
    if (![JSSplashScreenViewController canShowImage]) {
        [self checkDeviceNet];
    }
}

- (void)checkVersion {
    [ClientNetManager fetchVersionUpdateWithSuccess:^(id resultResponse, id resultModel) {
        NSLog(@"resultResponse : %@",resultResponse);
        [self versionUpdateWithVersionModel:resultModel];
    } failure:nil];
}

- (void)versionUpdateWithVersionModel:(VersionModel *)model {
    if (!model || model.APP_IS_UPDATE.integerValue == 1) {
        return;
    }
    NSString *versionInfo = model.APP_VER_NO.notNull ? model.APP_VER_NO : @" ";
    NSString *updateInfo = model.APP_VER_DESC.notNull ? model.APP_VER_DESC : @"";
//    NSString *appSize = list.APP_SIZE.notNull ? [NSString stringWithFormat:@"(%@)",list.APP_SIZE] : versionInfo;
    NSString *versionTitle = [NSString stringWithFormat:@"版本%@",versionInfo];
    updateInfo = [updateInfo stringByReplacingOccurrencesOfString:@"<br>" withString:@"\n"];
    
    [self.splashVC stopTimer];

    if (model.APP_IS_UPDATE.integerValue == 2) {
        CCYVersionAlertView *alertView=[[CCYVersionAlertView alloc]initVersionAlertView:versionTitle versionDetails:updateInfo doneTitle:@"立即更新" cancelTitle:@"下次再说" doneHandle:^{
            [self.splashVC addTimer];
            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:model.APP_VER_URL]];
        } cancelHandle:^{
            [self.splashVC addTimer];
        }];
        [alertView show];
    } else if (model.APP_IS_UPDATE.integerValue == 0) {
        CCYVersionAlertView *alertView=[[CCYVersionAlertView alloc]initVersionAlertView:versionTitle versionDetails:updateInfo doneTitle:@"立即更新" cancelTitle:nil doneHandle:^{
            if (@available(iOS 10.0, *)) {
                [[UIApplication sharedApplication] openURL:[NSURL URLWithString:model.APP_VER_URL] options:@{} completionHandler:^(BOOL success) {
                    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                        exit(0);
                    });
                }];
            } else {
                [[UIApplication sharedApplication] openURL:[NSURL URLWithString:model.APP_VER_URL]];
                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                    exit(0);
                });
            }
        } cancelHandle:nil];
        [alertView show];
    }
}

- (void)applicationWillResignActive:(UIApplication *)application {
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.
    NSLog(@"applicationWillResignActive");

}


- (void)applicationDidEnterBackground:(UIApplication *)application {
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
    NSLog(@"applicationDidEnterBackground");
    [[UIApplication sharedApplication].delegate.window addSubview:self.coverView];
}


- (void)applicationWillEnterForeground:(UIApplication *)application {
    // Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.
    NSLog(@"applicationWillEnterForeground");
    if (_coverView) {
        [_coverView removeFromSuperview];
        _coverView = nil;
    }
}


- (void)applicationDidBecomeActive:(UIApplication *)application {
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
    NSLog(@"applicationDidBecomeActive");
    
}


- (void)applicationWillTerminate:(UIApplication *)application {
    NSLog(@"applicationWillTerminate");

    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}


@end
